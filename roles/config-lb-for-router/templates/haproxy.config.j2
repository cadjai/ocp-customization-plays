# Global settings
#---------------------------------------------------------------------
global
    maxconn     20000
    log         /dev/log local0 info
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
#    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          300s
    timeout server          300s
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 20000

listen stats :9000
mode http
    stats enable
    stats uri /

{% if use_native_lb_for_router is undefined or not use_native_lb_for_router | bool %}
### OpenShift API Config

frontend  atomic-openshift-api
    bind *:{{ openshift_master_api_port }}
    default_backend atomic-openshift-api
    mode tcp
    option tcplog

backend atomic-openshift-api
    balance source
    mode tcp
{% for host in groups['masters'] %}
    server	master{{ loop.index0 }}	{{ host }}:{{ openshift_master_api_port }} check
{% endfor %}

{% else %}
{% if use_native_lb_for_router | bool %}
{% if use_same_port_for_router_and_lb is defined and use_same_port_for_router_and_lb | bool %}
### OpenShift API Config + Router Config
frontend  atomic-openshift-http
    bind  *:80
    mode tcp
    option tcplog
    default_backend atomic-openshift-apps-http

frontend  atomic-openshift-https
    bind  *:443
    mode tcp
    option tcplog
    tcp-request inspect-delay 5s
    tcp-request content accept if { req_ssl_hello_type 1 }

    acl host_masters   req_ssl_sni -i {{ openshift_master_cluster_hostname }} {{ openshift_master_cluster_public_hostname }}
    use_backend atomic-openshift-api if host_masters
    default_backend atomic-openshift-apps-https

backend atomic-openshift-api
    balance source
    mode tcp
{% for host in groups['masters'] %}
    server	master{{ loop.index0 }}	{{ host }}:{{ openshift_master_api_port }} check
{% endfor %}

backend atomic-openshift-apps-http
    balance source
    mode tcp
{% set myindex = 0 %}
{% for node in groups['nodes'] %}
{% if hostvars[node].openshift_node_group_name == 'node-config-infra' %}
    server router{{ myindex }} {{ node }}:80 check
{% set myindex = myindex + 1 %}
{% endif %}
{% endfor %}

backend atomic-openshift-apps-https
    balance source
    mode tcp
{% set myindex = 0 %}
{% for node in groups['nodes'] %}
{% if hostvars[node].openshift_node_group_name == 'node-config-infra' %}
    server router{{ myindex }} {{ node }}:80 check
{% set myindex = myindex + 1 %}
{% endif %}
{% endfor %}

{% else %}
### OpenShift API Config
frontend  atomic-openshift-api
    bind *:{{ openshift_master_api_port }}
    default_backend atomic-openshift-api
    mode tcp
    option tcplog

backend atomic-openshift-api
    balance source
    mode tcp
{% for host in groups['masters'] %}
    server	master{{ loop.index0 }}	{{ host }}:{{ openshift_master_api_port }} check
{% endfor %}

### Router Config
frontend router-http
    bind *:80
    default_backend atomic-openshift-apps-http

frontend router-https
    bind *:443
    mode tcp
    option tcplog
    default_backend atomic-openshift-apps-https

backend atomic-openshift-apps-http
    balance source
    mode http
    option httpclose
    option forwardfor
{% set myindex = 0 %}
{% for node in groups['nodes'] %}
{% if hostvars[node].openshift_node_group_name == 'node-config-infra' %}
    server router{{ myindex }} {{ node }}:80 check
{% set myindex = myindex + 1 %}
{% endif %}
{% endfor %}

backend atomic-openshift-apps-https
    balance source
    mode tcp
{% set myindex = 0 %}
{% for node in groups['nodes'] %}
{% if hostvars[node].openshift_node_group_name == 'node-config-infra' %}
    server router{{ myindex }} {{ node }}:80 check
{% set myindex = myindex + 1 %}
{% endif %}
{% endfor %}

{% endif %}
{% endif %}
{% endif %}
