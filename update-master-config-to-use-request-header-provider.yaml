---
- name: Add Custom certificate to Master-Config.yaml
  hosts: masters 
  tasks:
  - name: Update ServingInfo attribute with Custom Certificate
    blockinfile:
      path: /etc/origin/master/master-config.yaml
      insertafter: "^  requestTimeoutSeconds"
      state: present
      marker: "# {mark} ANSIBLE MANAGED BLOCK Adding custom certs to servingInfo"
      block: |2
          namedCertificates:
            - certFile: /etc/origin/master/named_certificates/{{ lb_custom_cert }}.pem
              keyFile: /etc/origin/master/named_certificates/{{ lb_custom_cert }}.key
              names:
                - "{{ lb_fqdn }}"

  - name: Add Markers to mark HTPasswd Identity Provider 1 of 2 
    lineinfile:
      path: /etc/origin/master/master-config.yaml
      insertafter: "  identityProviders:"
      line: "# BEGIN ANSIBLE MANAGED BLOCK Removing Htpasswd Identity Provider" 

  - name: Add Markers to mark HTPasswd Identity Provider 2 of 2 
    lineinfile:
      path: /etc/origin/master/master-config.yaml
      insertafter: "      file: /etc/origin/master/htpasswd.openshift"
      line: "# END ANSIBLE MANAGED BLOCK Removing Htpasswd Identity Provider" 

  - name: Add Request Header Provider Config
    blockinfile:
      path: /etc/origin/master/master-config.yaml
      insertafter: "  identityProviders:"
      state: present
      marker: "# {mark} ANSIBLE MANAGED BLOCK Adding RequestHeader Provider" 
      block: |2
        - name: requestheader
          challenge: true
          login: true
          mappingMethod: add
          provider:
            apiVersion: v1
            kind: RequestHeaderIdentityProvider
            challengeURL: "https://{{ lb_fqdn }}/challenging-proxy/oauth/authorize?${query}"
            loginURL: "https://{{ lb_fqdn }}/login-proxy/oauth/authorize?${query}"
            clientCA: /etc/origin/master/proxyca.crt
            clientCommonNames:
            - "{{ authproxy_cn }}"
            headers:
              - X-Remote-User
    register: requestheaderconfigout

  - name: Restart Openshift Controller Services
    service:
      name: "{{ item }}"
      state: restarted
    with_items:
      - atomic-openshift-master-api
      - atomic-openshift-master-controllers
    when: requestheaderconfigout.msg == "block inserted"
    register: mastersvcrestartout

  - name: Check Status of Openshift Controller Services
    service:
      name: "{{ item }}"
      state: restarted
    with_items:
      - atomic-openshift-master-api
      - atomic-openshift-master-controllers
    when: mastersvcrestartout.rc == 0
